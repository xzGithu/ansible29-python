---
- hosts: groups
  become: no
  gather_facts: no
  tasks: 
    - name: check whether flume running on this host
      shell: ps -ef |grep {{instpath}}/flume|grep {{ansible_ssh_user}}|grep -v grep|wc -l
      register: result
    - name: exit with already installed flume
      fail: msg="flume already running on this host"
      when: result.stdout|int > 0
    - name: check whether flume dir exist
      stat:
        path: '{{instpath}}/flume'
      register: flumepath
    - name: exit with already installed flume under path {{instpath}}
      fail: msg="already has flume directory under {{instpath}}"
      when: flumepath.stat.isdir is defined and flumepath.stat.isdir
    - name: check install directory status
      stat:
        path: '{{instpath}}'
      register: pbig
    - name: create install directory
      become: yes
#      become_method: su
      file: >-
        dest={{instpath}} mode=0777 state=directory owner={{ansible_ssh_user}}
      when: pbig.stat.exists is defined and pbig.stat.exists == False
    - name: exit with can not create install directory
      fail: msg="no permission to create {{instpath}}"
      when: ansible_become_pass is not defined and pbig.stat.exists is defined and pbig.stat.exists == False

### check java env
    - name: backup bash_profile
      shell: echo y|cp ~/.bash_profile ~/.bash_profile.ansible.flume
    - name: check java env
#      shell: cat ~/.bash_profile|grep '^export[[:space:]]*JAVA_HOME'|grep -v grep|wc -l
      shell: cat /etc/profile|grep -E '^JAVA_HOME[[:space:]]*=|^export[[:space:]]*JAVA_HOME[[:space:]]*='|tail -n -1|awk -F'=' '{print $2}'|wc -l
      ignore_errors: yes
      register: javaenv
    - name: install java
      unarchive: src=/opt/ansible/jdk/jdk.tar.gz dest={{instpath}}
      when: javaenv.stdout|int==0
    - name: set java env 
      lineinfile: path=~/.bash_profile regexp="{{item.position}}" line="{{item.value}}" state=present insertbefore="^export PATH=(.*)"
      with_items:
        - {position: "^export JAVA_HOME=(.*)", value: "export JAVA_HOME={{instpath}}/jdk"}
      when: javaenv.stdout|int==0
    - name: set path env 
      lineinfile: path=~/.bash_profile line="{{item.value}}"  insertafter="^export PATH=(.*)"
      with_items:
        - {position: "export PATH=", value: "export PATH=$JAVA_HOME/bin:$PATH"}
      when: javaenv.stdout|int==0
    - name: update permission for java/bin # modify 
      file: dest={{instpath}}/jdk/bin mode=0755 recurse=yes
      when: javaenv.stdout|int==0
    - name: flush bash_profile #flush env
      shell: source ~/.bash_profile
      when: javaenv.stdout|int==0
    - name: get flume env
      shell: "cat ~/.bash_profile|grep '^export[[:space:]]*FLUME_HOME'|grep -v grep|wc -l"
      register: hresult
    - name: set flume home
      lineinfile: path=~/.bash_profile regexp="^export FLUME_HOME=" line="export FLUME_HOME={{instpath}}/flume"
      when: hresult.stdout|int == 0
    - name: set path env 
      lineinfile: path=~/.bash_profile line="export PATH=$FLUME_HOME/bin:$PATH"
      when: hresult.stdout|int == 0
    - name: flush bash_profile for flume
      shell: source ~/.bash_profile
      when: hresult.stdout|int == 0

### deploy flume
    - name: install flume
      unarchive: src=/opt/ansible/flume/packages/flume-1.9.tar.gz dest={{instpath}}
### replace configure files
    - name: modify flume-env.sh
      template: src=/opt/ansible/flume/templates/flume-env.sh.j2 dest={{instpath}}/flume/conf/flume-env.sh
    - name: get java home
      shell: cat ~/.bash_profile|grep -E '^JAVA_HOME[[:space:]]*=|^export[[:space:]]*JAVA_HOME[[:space:]]*='|tail -n -1|awk -F'=' '{print $2}'
      register: javahome
    - name: set flume jave home
      lineinfile: path={{instpath}}/flume/conf/flume-env.sh regexp="export JAVA_HOME=" line="export JAVA_HOME={{javahome.stdout}}"
    - name: modify flume.conf
      template: src=/opt/ansible/flume/templates/flume.conf.j2 dest={{instpath}}/flume/conf/flume.conf
### start flume
    - name: start flume
      shell: source ~/.bash_profile; cd {{instpath}}/flume; nohup bin/flume-ng agent -n al -c conf -f conf/flume.conf -Dflume.root.logger=INFO,console & sleep 2
### check start status
    - name: get flume process number
      shell: ps -ef|grep {{instpath}}/flume|grep {{ansible_ssh_user}}|grep -v ansible|grep -v grep|wc -l
      register: presult
    - name: start success
      command: echo start success
      when: presult.stdout|int>0
    - name: start failed
      fail: msg="start flume failed"
      when: presult.stdout|int == 0
